// Generated by Dagger (https://dagger.dev).
package uz.gita.my_max_way_uz.domain.repository.impl;

import com.google.firebase.firestore.FirebaseFirestore;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkRepositoryImpl_Factory implements Factory<NetworkRepositoryImpl> {
  private final Provider<FirebaseFirestore> dbProvider;

  public NetworkRepositoryImpl_Factory(Provider<FirebaseFirestore> dbProvider) {
    this.dbProvider = dbProvider;
  }

  @Override
  public NetworkRepositoryImpl get() {
    return newInstance(dbProvider.get());
  }

  public static NetworkRepositoryImpl_Factory create(Provider<FirebaseFirestore> dbProvider) {
    return new NetworkRepositoryImpl_Factory(dbProvider);
  }

  public static NetworkRepositoryImpl newInstance(FirebaseFirestore db) {
    return new NetworkRepositoryImpl(db);
  }
}
